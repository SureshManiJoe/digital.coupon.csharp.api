// <auto-generated />
using System;
using DigitalCouponApi.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DigitalCouponApi.Migrations
{
    [DbContext(typeof(CouponDbContext))]
    [Migration("20190721133040_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DigitalCouponApi.Entities.Coupon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<Guid>("CustomerId");

                    b.Property<float>("DiscountPercent");

                    b.Property<DateTime>("ExpiresOn");

                    b.Property<string>("Name");

                    b.Property<float>("RevenueSharePercent");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Coupon");
                });

            modelBuilder.Entity("DigitalCouponApi.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = new Guid("12f08dc9-e15d-4583-ba9d-6382f023740c"),
                            CreatedDateTime = new DateTime(2019, 7, 21, 19, 0, 39, 919, DateTimeKind.Local).AddTicks(3238),
                            Email = "jeffrey.ritcher@nowhere.com",
                            Name = "Jeffrey Ritcher"
                        },
                        new
                        {
                            Id = new Guid("80202dc7-2c4d-457b-a0a0-3e5135268155"),
                            CreatedDateTime = new DateTime(2019, 7, 21, 19, 0, 39, 920, DateTimeKind.Local).AddTicks(8609),
                            Email = "sheldon.couper@nowhere.com",
                            Name = "Sheldon Couper"
                        },
                        new
                        {
                            Id = new Guid("13b8c87c-efd7-4e50-9675-fdd89f6f01b0"),
                            CreatedDateTime = new DateTime(2019, 7, 21, 19, 0, 39, 920, DateTimeKind.Local).AddTicks(8616),
                            Email = "mike.hill@nowhere.com",
                            Name = "Mike Hill"
                        });
                });

            modelBuilder.Entity("DigitalCouponApi.Entities.Ledger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CouponId");

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<double>("DiscountAmount");

                    b.Property<double>("OriginalPrice");

                    b.Property<double>("RevenueShareAmount");

                    b.Property<double>("SalesAmount");

                    b.Property<double>("SettlementAmount");

                    b.HasKey("Id");

                    b.HasIndex("CouponId");

                    b.ToTable("Ledger");
                });

            modelBuilder.Entity("DigitalCouponApi.Entities.Coupon", b =>
                {
                    b.HasOne("DigitalCouponApi.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DigitalCouponApi.Entities.Ledger", b =>
                {
                    b.HasOne("DigitalCouponApi.Entities.Coupon", "Coupon")
                        .WithMany()
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
